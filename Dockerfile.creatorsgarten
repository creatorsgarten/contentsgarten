FROM node:18-alpine AS base
RUN apk add --no-cache libc6-compat
RUN apk update
RUN yarn global add pnpm turbo
WORKDIR /app

FROM base as builder
COPY . .
RUN turbo prune --scope=./creatorsgarten --docker

# Add lockfile and package.json's of isolated subworkspace
# FROM node:alpine AS installer
# RUN apk add --no-cache libc6-compat
# RUN apk update
# WORKDIR /app

# # First install the dependencies (as they change less often)
# COPY .gitignore .gitignore
# COPY --from=builder /app/out/json/ .
# COPY --from=builder /app/out/yarn.lock ./yarn.lock
# RUN yarn install

# # Build the project
# COPY --from=builder /app/out/full/ .
# RUN yarn turbo run build --filter=web...

# FROM node:alpine AS runner
# WORKDIR /app

# # Don't run production as root
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs
# USER nextjs

# COPY --from=installer /app/apps/web/next.config.js .
# COPY --from=installer /app/apps/web/package.json .

# # Automatically leverage output traces to reduce image size
# # https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=installer --chown=nextjs:nodejs /app/apps/web/.next/standalone ./
# COPY --from=installer --chown=nextjs:nodejs /app/apps/web/.next/static ./apps/web/.next/static

# CMD node apps/web/server.js